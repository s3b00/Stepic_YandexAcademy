else except finally for return try @ int or reduce with yield += .py, .pyw, .pyc, .pyo, .pyd<sup id="cite_ref-3" class="reference"><a href="#cite_note-3">&#91;3&#93;</a></sup> .pyc .pyo @декоратор(аргументы) __doc__ a, *rest, b = range(5) and break child class complex contextlib continue def def foo(a, (b, c)) elif else, except exec filter from __future__ import print_function functools help() if import import keyword; print(keyword.kwlist) import this int, str, float, list io is, '.', '=' itertools len() logging long map master next() parent pass pdb print printf() profile re reload() s[N:M] send() slave sort() sys.exc_info() threading throw() timeit try, except, else, finally, raise unittest while {el1, el2, el3} {k: v for k, v in a_dict} 